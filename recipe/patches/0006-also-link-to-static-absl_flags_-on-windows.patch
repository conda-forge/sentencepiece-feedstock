From d830e3c7a9a395f7db04c737dffa6771add78eb7 Mon Sep 17 00:00:00 2001
From: "H. Vetinari" <h.vetinari@gmx.com>
Date: Tue, 20 Feb 2024 17:43:23 +1100
Subject: [PATCH 06/13] also link to static absl_flags_* on windows

---
 python/setup.py | 10 +++++++++-
 1 file changed, 9 insertions(+), 1 deletion(-)

diff --git a/python/setup.py b/python/setup.py
index 36ed833..1316df3 100755
--- a/python/setup.py
+++ b/python/setup.py
@@ -117,13 +117,21 @@ if os.name == 'nt':
     ]
   elif True:
     cflags = ['/std:c++17', '/MD', '/I' + os.environ["LIBRARY_INC"]]
+    # most of abseil can be built as shared, which ends up in one giant library
+    # called abseil_dll; the absl_flags_* libraries always stay static
+    absl_libs = [
+        "abseil_dll", "absl_log_flags", "absl_flags_commandlineflag", "absl_flags_commandlineflag_internal",
+        "absl_flags_config", "absl_flags_internal", "absl_flags_marshalling", "absl_flags_parse",
+        "absl_flags_private_handle_accessor", "absl_flags_program_name", "absl_flags_reflection",
+        "absl_flags_usage", "absl_flags_usage_internal",
+    ]
     libs = [
       # equivalent of -L$PREFIX/lib -lsentencepiece -lsentencepiece_train -lprotobuf
       os.environ["LIBRARY_LIB"] + f"\\{x}.lib"
       # protobuf actually has the lib-prefix in the name also on windows;
       # since libsentencepiece is static on windows, we also need _its_
       # host dependencies for the link interface, i.e. also abseil
-      for x in ["sentencepiece", "sentencepiece_train", "libprotobuf", "abseil_dll"]
+      for x in ["sentencepiece", "sentencepiece_train", "libprotobuf"] + absl_libs
     ]
   else:
     # build library locally with cmake and vc++.
